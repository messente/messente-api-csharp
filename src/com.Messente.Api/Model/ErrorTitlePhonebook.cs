/*
 * Messente API
 *
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber and WhatsApp messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.Messente.Api.Client.OpenAPIDateConverter;

namespace com.Messente.Api.Model
{
    /// <summary>
    /// Textual value which corresponds to an error code
    /// </summary>
    /// <value>Textual value which corresponds to an error code</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ErrorTitlePhonebook
    {
        /// <summary>
        /// Enum InvalidData for value: Invalid data
        /// </summary>
        [EnumMember(Value = "Invalid data")]
        InvalidData = 1,

        /// <summary>
        /// Enum Unauthorized for value: Unauthorized
        /// </summary>
        [EnumMember(Value = "Unauthorized")]
        Unauthorized = 2,

        /// <summary>
        /// Enum MissingResource for value: Missing resource
        /// </summary>
        [EnumMember(Value = "Missing resource")]
        MissingResource = 3,

        /// <summary>
        /// Enum Conflict for value: Conflict
        /// </summary>
        [EnumMember(Value = "Conflict")]
        Conflict = 4,

        /// <summary>
        /// Enum ClientError for value: Client error
        /// </summary>
        [EnumMember(Value = "Client error")]
        ClientError = 5,

        /// <summary>
        /// Enum GeneralError for value: General error
        /// </summary>
        [EnumMember(Value = "General error")]
        GeneralError = 6
    }

}
