/*
 * Messente API
 *
 * [Messente](https://messente.com) is a global provider of messaging and user verification services.  * Send and receive SMS, Viber, WhatsApp and Telegram messages. * Manage contacts and groups. * Fetch detailed info about phone numbers. * Blacklist phone numbers to make sure you're not sending any unwanted messages.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: messente@messente.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = com.Messente.Api.Client.OpenAPIDateConverter;

namespace com.Messente.Api.Model
{
    /// <summary>
    /// Whatsapp component parameter
    /// </summary>
    [DataContract(Name = "WhatsAppParameter")]
    public partial class WhatsAppParameter : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WhatsAppParameter" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WhatsAppParameter() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WhatsAppParameter" /> class.
        /// </summary>
        /// <param name="type">Type of the parameter (required).</param>
        /// <param name="text">A text.</param>
        /// <param name="currency">A currency object.</param>
        /// <param name="dateTime">A date_time object.</param>
        /// <param name="image">A media object of type image.</param>
        /// <param name="document">A media object of type document.</param>
        /// <param name="video">A media object of type video.</param>
        public WhatsAppParameter(string type = default(string), string text = default(string), Object currency = default(Object), Object dateTime = default(Object), Object image = default(Object), Object document = default(Object), Object video = default(Object))
        {
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new ArgumentNullException("type is a required property for WhatsAppParameter and cannot be null");
            }
            this.Type = type;
            this.Text = text;
            this.Currency = currency;
            this.DateTime = dateTime;
            this.Image = image;
            this.Document = document;
            this.Video = video;
        }

        /// <summary>
        /// Type of the parameter
        /// </summary>
        /// <value>Type of the parameter</value>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// A text
        /// </summary>
        /// <value>A text</value>
        [DataMember(Name = "text", EmitDefaultValue = false)]
        public string Text { get; set; }

        /// <summary>
        /// A currency object
        /// </summary>
        /// <value>A currency object</value>
        [DataMember(Name = "currency", EmitDefaultValue = false)]
        public Object Currency { get; set; }

        /// <summary>
        /// A date_time object
        /// </summary>
        /// <value>A date_time object</value>
        [DataMember(Name = "date_time", EmitDefaultValue = false)]
        public Object DateTime { get; set; }

        /// <summary>
        /// A media object of type image
        /// </summary>
        /// <value>A media object of type image</value>
        [DataMember(Name = "image", EmitDefaultValue = false)]
        public Object Image { get; set; }

        /// <summary>
        /// A media object of type document
        /// </summary>
        /// <value>A media object of type document</value>
        [DataMember(Name = "document", EmitDefaultValue = false)]
        public Object Document { get; set; }

        /// <summary>
        /// A media object of type video
        /// </summary>
        /// <value>A media object of type video</value>
        [DataMember(Name = "video", EmitDefaultValue = false)]
        public Object Video { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WhatsAppParameter {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Text: ").Append(Text).Append("\n");
            sb.Append("  Currency: ").Append(Currency).Append("\n");
            sb.Append("  DateTime: ").Append(DateTime).Append("\n");
            sb.Append("  Image: ").Append(Image).Append("\n");
            sb.Append("  Document: ").Append(Document).Append("\n");
            sb.Append("  Video: ").Append(Video).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
